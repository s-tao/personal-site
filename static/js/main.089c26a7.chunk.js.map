{"version":3,"sources":["clouds-bg.jpg","prof-pic.jpg","NavStyles.js","styled.js","components/Projects.js","components/Profile.js","components/Intro.js","components/Homepage.js","components/WhatsMyCareProj.js","components/PortfolioWebsite.js","components/Nav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavStyle","styled","div","IconStyle","p","Container","FlipContainer","Block","ProjectChild","ProjectContainer","ProjectDesc","Projects","to","href","className","Profile","style","textAlign","fontSize","Intro","src","profilePic","alt","height","width","borderRadius","justifyContent","margin","Homepage","useState","aboutMe","setAboutMe","useSpring","opacity","transform","config","mass","tension","friction","alignItems","interpolate","o","onClick","t","WhatsMyCare","PortfolioWebsite","Nav","icon","faHome","size","faLinkedin","faGithubSquare","faParking","exact","path","component","GlobalStyle","createGlobalStyle","bkgrd","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.089c26a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clouds-bg.2c05f829.jpg\";","module.exports = __webpack_public_path__ + \"static/media/prof-pic.9cc396c9.jpg\";","import styled from 'styled-components';\n\nexport const NavStyle = styled.div`\n  position: absolute;\n  width: 45px;\n  ${'' /* margin: 10px 0; */}\n  text-align: center;\n  height: 100vh;\n  ${'' /* background-color: #000000; */}\n  ${'' /* opacity: 60%; */}\n  display: grid;\n  align-content: center;\n`;\n\nexport const IconStyle = styled.p`\n  margin: 8px 0;\n  color: #46484A;\n  transition: all .3s ease-in-out;\n  :hover {\n    color: #ffffff;\n    cursor: pointer;\n    transition: all .3s ease-in-out;\n    transform: scale(1.3);\n  }\n`;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  ${'' /* justify-content: center; */}\n  display: flex;\n  margin: auto;\n  height: 100vh;\n  width: 100%;\n  flex-wrap: wrap;\n  ${'' /* padding: 15px; */}\n`;\n\nexport const FlipContainer = styled.div`\n  ${'' /* position: absolute; */}\n  justify-content: center;\n  align-items: center;\n  width: 680px;\n  height: 300px;\n  margin: auto 8%;\n  padding: 3%; \n  display: grid;\n  background-color: #ffffff;\n  opacity: 95%;\n  ${'' /* outline: solid 1px #c1cfd3; */}\n  overflow-x: hidden;\n  overflow-y: auto;\n  border-radius: 5px;\n`;\n      \nexport const Block = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  ${'' /* margin: 10px; */}\n`;\n\nexport const ProjectChild = styled.div`\n  display: inline-block;\n  width: 250px;\n  height: 200px;\n  background-color: #ffffff;\n  opacity: 95%;\n  border-radius: 5px;\n  padding: 10px;\n  ${'' /* box-shadow: \n       inset 0 -2em 2em rgba(0,0,0,0.1), \n             0 0  0 2px rgb(255,255,255),\n             0.2em 0.2em 1em rgba(0,0,0,0.3); */}\n  :hover { \n    ${'' /* cursor: pointer;  */}\n    transition: all .3s ease-in-out;\n    transform: scale(1.02); \n  }\n`;\n\n\nexport const ProjectContainer = styled.div`\n  display: grid;\n  grid-gap: 1rem;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  grid-template-rows: repeat(auto-fill, minmax(200px, 1fr));\n  ${'' /* grid-template-rows: auto; */}\n  justify-items: center;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  margin: 0 45px;\n  padding: 30px;\n\n`;\n\nexport const ProjectDesc = styled.div`\n  width: 100%;\n  height: auto;\n  background-color: #ffffff;\n  opacity: 95%;\n  border-radius: 5px;\n  padding: 10px;\n  margin: 45px 25%;\n`;\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ProjectContainer, ProjectChild, Container } from '../styled.js';\n\n\nconst Projects = () => {\n\n  return (\n    <Container>\n      <ProjectContainer>\n        <ProjectChild>\n          <Link to=\"/projects/whats-my-care\">\n            <h3>What's My Care</h3>\n            <p>\n              Full stack web-app that allows users to find health insurance plans\n            </p>\n            </Link>\n          <hr></hr>\n          <a href=\"https://github.com/s-tao/whats-my-care\" \n             className=\"alt-link\">\n            GITHUB\n          </a>\n        </ProjectChild> \n        <ProjectChild>\n          <Link to=\"/projects/portfolio-website\">\n            <h3>Personal Website</h3>\n            <p>\n              Using React to create my own personal website showcasing all coding \n              projects\n            </p>\n            </Link>\n          <hr></hr>\n          <a href=\"https://github.com/s-tao/personal-site\"              \n             className=\"alt-link\">\n            GITHUB\n          </a>\n        </ProjectChild> \n      </ProjectContainer> \n    </Container>\n  );\n}\n\nexport default Projects;\n\n\n","import React from 'react';\nimport { FlipContainer } from '../styled.js';\n\n\nconst Profile = () => {\n  const justifyText = {\n      textAlign: 'justify',\n      fontSize: '14px'\n  }\n\n  return (\n      <FlipContainer style={justifyText}>\n        <p>\n          Working as a Landscape Designer, I immediately gravitated towards the \n          minute design and details of how things were constructed. I used \n          AutoCAD on a daily basis to draft out plans and details, Sketchup\n          to model our designs, and Adobe Suite to render marketing images.\n          Although I enjoyed working with various applications, I gradually \n          became more interested in how these programs were created to help\n          me as the user.\n        <br></br><br></br>\n          Eventually, I began entertaining different ways I can help \n          improve people's lives through creating programs myself. So... I made \n          the switch through joining Hackbright Academy, an all female coding \n          bootcamp! I am excited to continue learning by doing! This site \n          consists of all the projects I've worked on through my journey as \n          a Software Engineer.\n        </p>\n      </FlipContainer>\n      \n  );\n}\n\nexport default Profile;\n\n","import React from 'react';\nimport { FlipContainer, Block } from '../styled.js';\nimport profilePic from '../prof-pic.jpg'; \n\n\nconst Intro = () => {\n  // inline style created as dict (keys: values)\n  const imgStyle = {\n    height: '150px',\n    width: '150px',\n    borderRadius: '50%',\n    justifyContent: 'center'\n  };\n\n  return (\n      <FlipContainer>\n        <Block>\n          <img src={profilePic} alt=\"Profile\" style={imgStyle} />\n        </Block>\n        <Block>\n          <h1>Sarah Tao</h1>\n        </Block>\n        <Block>\n          <p style={{fontSize: '20px', margin: '0'}}><em>Software Engineer</em></p>\n        </Block>\n        <Block>\n          <p>satao.94@gmail.com</p>\n        </Block>\n      </FlipContainer>\n  );\n}\n\nexport default Intro;\n\n","import React, {useState} from 'react';\n\nimport Profile from './Profile';\nimport Intro from './Intro';\nimport {useSpring, animated as a} from 'react-spring';\nimport { Container } from '../styled.js';\n\nconst Homepage = () => {\n\n  const [aboutMe, setAboutMe] = useState(false);\n\n  const clickHandler = () => {\n    setAboutMe(!aboutMe)\n  }\n\n  const {transform, opacity} = useSpring({\n    opacity: aboutMe ? 1 : 0,\n    transform: `perspective(1200px) rotateX(${aboutMe ? 180 : 0}deg)`,\n    config: {mass: 5, tension: 500, friction: 80}\n  })\n\n\n  return (    \n    <Container style={{alignItems: 'center', justifyContent: 'center'}}>\n      <a.div className=\"flip\" style={{ opacity: opacity.interpolate(o => 1 - o), transform }}>\n        <Intro/>\n      </a.div>\n\n      <a.div onClick={clickHandler} className=\"flip\" style={{ opacity, transform: transform.interpolate(t => `${t} rotateX(180deg)`) }}>\n        <Profile/>\n      </a.div>\n    </Container>\n\n      \n  ); \n}\n\nexport default Homepage;","import React from 'react';\nimport { Container, ProjectDesc, ProjectContainer } from '../styled.js';\n// import { BrowserRouter as Router, Link, Switch, Route } from 'react-router-dom';\n\nconst WhatsMyCare = () => {\n\n  return (\n    <Container>\n      <ProjectDesc>\n        <h1>What's My Care</h1>\n        <p>\n          \n        </p>\n      </ProjectDesc>\n    </Container>\n  )\n};\n\nexport default WhatsMyCare;","import React from 'react';\nimport { Container, ProjectDesc, ProjectContainer } from '../styled.js';\n// import { BrowserRouter as Router, Link, Switch, Route } from 'react-router-dom';\n\nconst PortfolioWebsite = () => {\n\n  \n\n  return (\n    <Container>\n      <ProjectDesc>\n        <h1>Portfolio Website</h1>\n      </ProjectDesc>\n    </Container>\n  )\n};\n\nexport default PortfolioWebsite;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLinkedin, faGithubSquare } from '@fortawesome/free-brands-svg-icons';\nimport { faParking, faHome } from '@fortawesome/free-solid-svg-icons';\nimport { NavStyle, IconStyle } from '../NavStyles.js';\nimport { \n  BrowserRouter as Router, \n  Link, \n  Switch, \n  Route\n} from 'react-router-dom';\nimport Projects from './Projects.js';\nimport Homepage from './Homepage.js';\nimport WhatsMyCare from './WhatsMyCareProj.js';\nimport PortfolioWebsite from './PortfolioWebsite.js';\n\nconst Nav = () => {\n  \n  return (\n    <Router>\n      <NavStyle>\n        <Link to=\"/\">\n          <IconStyle>\n            <FontAwesomeIcon icon={faHome} size=\"2x\" />\n          </IconStyle>\n        </Link>\n        <a href=\"https://www.linkedin.com/in/sarahtao/\">\n          <IconStyle>\n            <FontAwesomeIcon icon={faLinkedin} size=\"2x\"/>\n          </IconStyle>\n        </a>\n        <a href=\"https://github.com/s-tao\">\n          <IconStyle>\n            <FontAwesomeIcon icon={faGithubSquare} size=\"2x\"/>\n          </IconStyle>\n        </a>\n        <Link to=\"/projects\">\n          <IconStyle>\n            <FontAwesomeIcon icon={faParking} size=\"2x\"/>\n          </IconStyle>\n        </Link>\n      </NavStyle>\n\n      <Switch>\n        <Route exact path=\"/\" component={Homepage} />\n        <Route path=\"/projects/portfolio-website\" component={PortfolioWebsite} />\n        <Route path=\"/projects/whats-my-care\" component={WhatsMyCare} />\n        <Route path=\"/projects\" component={Projects} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default Nav;","import React from 'react';\n\nimport bkgrd from './clouds-bg.jpg'\nimport { createGlobalStyle } from 'styled-components'\nimport Nav from './components/Nav';\n// import { Container } from './styled.js';\n// import { BrowserRouter as Router } from 'react-router-dom';\n\nimport './App.css';\n\n\nconst GlobalStyle = createGlobalStyle`\n  body, #root {\n    background-image: url(${bkgrd});\n    background-size: cover;\n    margin: 0;\n    padding: 0;\n    height: 100vh;\n    overflow: hidden;\n    ${'' /* user-select: none; */}\n  }\n`;\n\n\nfunction App() {\n \n\n  return (\n    // <Router>\n    <>\n    <GlobalStyle/>\n    <Nav/>\n    </>\n    // </Router>\n  );\n\n}\n\n\nexport default App;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}